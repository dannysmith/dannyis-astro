---
interface Props {
  href: string;
  variant?: 'primary' | 'secondary';
}

const { href, variant = 'primary' } = Astro.props;
---

<div class="button-link-container cq">
  <a href={href} class:list={['button-link', variant]}>
    <span class="button-content">
      <slot name="icon" />
      <span class="button-text"><slot /></span>
    </span>
  </a>
  
</div>

<style>
  .button-link-container {
    margin: clamp(1.25rem, 4vw, 3rem) auto;
    text-align: center;
    /* Give the button a centering context and room to breathe */
    display: flex;
    justify-content: center;
  }

  /* Big, clean CTA */
  .button-link {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.6em;
    padding: clamp(0.9em, 1vw, 1.1em) clamp(1.25em, 3.5vw, 2.1em);
    border-radius: 8px;
    min-width: clamp(13rem, 50vw, 24rem);
    max-width: 100%;
    line-height: 1;
    font-family: var(--font-ui);
    font-weight: 700;
    font-size: clamp(1rem, 0.65rem + 0.8vw, 1.25rem);
    letter-spacing: 0.04em;
    text-decoration: none;
    text-transform: uppercase;
    border: 1.5px solid transparent;
    transition: transform 0.16s cubic-bezier(0.4, 0, 0.2, 1),
      filter 0.16s cubic-bezier(0.4, 0, 0.2, 1),
      background 0.16s ease, color 0.16s ease, border-color 0.16s ease;
    filter: var(--shadow-xsmall);
  }

  .button-content {
    display: inline-flex;
    align-items: center;
    gap: 0.6em;
  }

  .button-text {
    letter-spacing: 0.06em;
  }

  .button-link:hover { transform: translateY(-1px); filter: var(--shadow-small); }
  .button-link:active { transform: translateY(0); filter: var(--shadow-xsmall); }

  .button-link:focus-visible {
    outline: none;
    box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-accent) 25%, transparent),
      0 0 0 6px color-mix(in srgb, var(--color-accent) 45%, transparent);
  }

  /* Primary variant â€” flat color, minimal */
  .button-link.primary {
    color: var(--color-button-primary-text);
    background: var(--color-button-primary-bg);
    border-color: color-mix(in srgb, var(--color-button-primary-bg) 65%, transparent);
  }

  .button-link.primary:hover {
    background: var(--color-button-primary-hover-bg);
  }

  /* Secondary variant */
  .button-link.secondary {
    background: var(--color-button-secondary-bg);
    color: var(--color-button-secondary-text);
    border-color: var(--color-button-secondary-border);
  }

  .button-link.secondary:hover {
    background:
      linear-gradient(
        to bottom,
        color-mix(in srgb, var(--color-button-secondary-hover-bg) 92%, white),
        var(--color-button-secondary-hover-bg)
      );
    color: var(--color-button-secondary-hover-text);
    border-color: var(--color-button-secondary-hover-border);
  }

  /* Larger containers: add a touch more padding */
  @container (width > 720px) {
    .button-link {
      padding: 1.05em 2.3em;
      min-width: 24rem;
    }
  }
</style>
