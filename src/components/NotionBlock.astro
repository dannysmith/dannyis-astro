---
import { unfurl } from 'unfurl.js'

export interface Props {
  href: string
}

const href = Astro.props.href

const result = await unfurl(href)
const { title, favicon, description } = result
let faviconExists = false
let coverExists = false
let faviconURL: string

const coverURL = result.open_graph.images?.[0]?.url

if (coverURL) {
  const coverResponse = await fetch(coverURL)
  if (coverResponse?.status == 200) {
    coverExists = true
  }
}

if (favicon) {
  const faviconResponse = await fetch(favicon)
  if (faviconResponse?.status == 200) {
    faviconExists = true
  }
}

if (faviconExists) {
  faviconURL = favicon
} else {
  faviconURL = '/notion-icon.svg'
}
---

<div class="wrapper">
  <a class="link" href={href}>
    {
      coverExists && (
        <div class="cover">
          <img class="cover-image" src={coverURL} width="1000" />
        </div>
      )
    }
    <div class="content">
      <div class="title">
        <img class="icon-image" src={faviconURL} width="100" height="100" />
        <h3>{title}</h3>
      </div>
      <p>{description}</p>
    </div>
  </a>
</div>

<style>
  .wrapper {
    container-type: inline-size; /* Only care about width */
    background-color: var(--color-card-background);
    border: 1px solid var(--color-card-border);
    border-radius: 5px;
    overflow: hidden;
    transition: box-shadow 0.2s ease-in-out;
  }

  .wrapper:hover {
    box-shadow: 0 0 5px 1px var(--color-card-border);
  }

  .link {
    --gap: 1rem;

    all: initial;
    font-family: var(--font-ui);
  }

  .link:hover {
    cursor: pointer;
    color: inherit !important; /* TODO */
  }

  .cover img {
    aspect-ratio: 16 / 7;
    object-fit: cover;
  }

  .content {
    display: grid;
    gap: var(--gap);
    padding: var(--gap);
  }

  .title {
    display: grid;
    grid-template-columns: 1.5rem 1fr;
    gap: var(--gap);
    align-items: top;
    font-size: 1rem;
    padding-bottom: var(--gap);
    border-bottom: 1px solid var(--color-card-border);
  }

  .icon-image {
    padding-top: 0.1em;
  }

  @container (min-width: 30rem) {
    .link {
      --gap: 2rem;
    }
    .title {
      grid-template-columns: 2rem 1fr;
      font-size: 1.3rem;
    }
  }

  h3 {
    /* Truncate after two lines */
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
