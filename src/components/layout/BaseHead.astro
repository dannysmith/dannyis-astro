---
// Import the fonts and global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '@fontsource-variable/fira-code';
import '@fontsource-variable/league-spartan';
import '../../styles/global.css';

// Import our new SEO utilities and configuration
import {
  generatePageTitle,
  generateMetaDescription,
  generateJSONLD,
  generateArticleMeta,
  generateOGImageUrl,
  validateSEOData,
  getSiteConfig,
} from '@utils/seo';
import { OG_CONFIG, TWITTER_CONFIG } from '@config/seo';

interface Props {
  title: string;
  description?: string;
  image?: string; // If provided, use as OG image. Otherwise, use default static image.
  type?: 'website' | 'article'; // 'website' (default) or 'article'
  pageType?: 'article' | 'note' | 'page'; // For title template differentiation
  // Optional props that may be passed by article/note layouts
  pubDate?: Date;
  updatedDate?: Date;
  tags?: string[];
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Validate and extract props
const seoData = validateSEOData(Astro.props);
const siteConfig = getSiteConfig();

// Generate all SEO values using utilities
const pageTitle = generatePageTitle(seoData.title, seoData.pageType);
const metaDescription = generateMetaDescription(seoData.description);
const ogImageUrl = generateOGImageUrl(seoData.image, Astro.url.toString());
const jsonLD = generateJSONLD(seoData, canonicalURL.toString(), ogImageUrl);
const articleMeta = generateArticleMeta(seoData);
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="generator" content={Astro.generator} />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Icons -->
<link rel="icon" href="/favicon.ico" sizes="any" />
<link rel="icon" href="/favicon.svg" type="image/svg+xml" />
<link rel="apple-touch-icon" href="/icon.jpg" />

<!-- RSS Auto-Discovery -->
<link
  rel="alternate"
  type="application/rss+xml"
  title="Danny Smith - Articles & Notes"
  href="/rss.xml"
/>
<link
  rel="alternate"
  type="application/rss+xml"
  title="Danny Smith - Articles"
  href="/rss/articles.xml"
/>
<link
  rel="alternate"
  type="application/rss+xml"
  title="Danny Smith - Notes"
  href="/rss/notes.xml"
/>

<!-- Identity etc -->
<link rel="pgpkey" href="/key.txt" />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{pageTitle}</title>
<meta name="title" content={pageTitle} />
<meta name="description" content={metaDescription} />
<meta name="author" content={siteConfig.author} />
<meta name="robots" content={siteConfig.robotsDirective} />
<meta name="theme-color" content={siteConfig.themeColor} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={seoData.type} />
<meta property="og:site_name" content={OG_CONFIG.siteName} />
<meta property="og:locale" content={OG_CONFIG.locale} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={pageTitle} />
<meta property="og:description" content={metaDescription} />
<meta property="og:image" content={ogImageUrl} />

<!-- Article-specific OpenGraph meta tags -->
{articleMeta.map(meta => <meta property={meta.property} content={meta.content} />)}

<!-- Twitter -->
<meta property="twitter:card" content={TWITTER_CONFIG.card} />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={pageTitle} />
<meta property="twitter:description" content={metaDescription} />
<meta property="twitter:image" content={ogImageUrl} />

<!-- JSON-LD Structured Data -->
<script type="application/ld+json" is:inline set:html={JSON.stringify(jsonLD)} />

<!-- Theme Management Script (must be inline to prevent flash) -->
<script is:inline>
  (function () {
    // Theme management API
    const themes = ['auto', 'light', 'dark'];

    function getSystemTheme() {
      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    }

    function getStoredTheme() {
      try {
        return localStorage.getItem('theme');
      } catch {
        return null;
      }
    }

    function setStoredTheme(theme) {
      try {
        localStorage.setItem('theme', theme);
      } catch {
        // Silently fail if localStorage is not available
      }
    }

    function getResolvedTheme(theme = getCurrentTheme()) {
      return theme === 'auto' ? getSystemTheme() : theme;
    }

    function getCurrentTheme() {
      return getStoredTheme() || 'auto';
    }

    function applyTheme(resolvedTheme) {
      document.documentElement.setAttribute('data-theme', resolvedTheme);
      document.documentElement.style.colorScheme = resolvedTheme;
    }

    function setTheme(newTheme) {
      if (!themes.includes(newTheme)) return;

      setStoredTheme(newTheme);
      const resolvedTheme = getResolvedTheme(newTheme);
      applyTheme(resolvedTheme);

      // Dispatch custom event for components to listen to
      document.dispatchEvent(
        new CustomEvent('theme-changed', {
          detail: { theme: newTheme, resolvedTheme },
        })
      );
    }

    // Initialize theme on page load
    function initTheme() {
      const currentTheme = getCurrentTheme();
      const resolvedTheme = getResolvedTheme(currentTheme);
      applyTheme(resolvedTheme);
    }

    // Global API
    window.theme = {
      get current() {
        return getCurrentTheme();
      },
      get resolved() {
        return getResolvedTheme();
      },
      get system() {
        return getSystemTheme();
      },
      set: setTheme,
      themes,
    };

    // Initialize immediately
    initTheme();

    // Handle system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
      if (getCurrentTheme() === 'auto') {
        applyTheme(getSystemTheme());
      }
    });

    // Handle ViewTransitions
    document.addEventListener('astro:after-swap', initTheme);
  })();
</script>

<!-- Simple Analytics -->
<!-- 100% privacy-first analytics -->
<script async src="https://scripts.simpleanalyticscdn.com/latest.js"></script>
<noscript
  ><img
    src="https://queue.simpleanalyticscdn.com/noscript.gif"
    alt=""
    referrerpolicy="no-referrer-when-downgrade"
  /></noscript
>
