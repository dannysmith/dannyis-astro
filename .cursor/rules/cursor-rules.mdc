---
description: Main index of Cursor rules and guidelines
globs: ['**/*']
alwaysApply: true
---
# Cursor Rules and Guidelines

This document serves as an index for all cursor rules and guidelines for the personal website project.

## Available Rules

### Project Structure

- **File**: `project-structure.md`
- **Description**: Defines the organization and architecture of the personal website built with Astro
- **Key Topics**:
  - Directory structure
  - Content organization
  - Component organization
  - Technical implementation
  - Best practices

### Component Guidelines

- **File**: `component-guidelines.md`
- **Description**: Guidelines for developing and maintaining Astro components
- **Key Topics**:
  - Component types and organization
  - Development guidelines
  - Props interface
  - Styling patterns
  - Accessibility
  - Best practices

### Styling Guide

- **File**: `styling-guide.md`
- **Description**: Guidelines for visual styling and CSS architecture
- **Key Topics**:
  - Color system
  - CSS organization
  - Component styling
  - CSS variables
  - Best practices

### Design and Brand Guidelines

- **File**: `design-and-brand-guidelines.md`
- **Description**: Comprehensive design philosophy, visual style, and brand identity guidelines
- **Key Topics**:
  - Site purpose and philosophy
  - Visual design philosophy
  - Typography system
  - Color system
  - Layout principles
  - Component design philosophy
  - Brand expression

### Astro Guidelines

- **File**: `astro-guidelines.md`
- **Description**: Specific guidelines for working with Astro features
- **Key Topics**:
  - Core principles
  - Component guidelines
  - Content collections
  - Image handling
  - Performance guidelines
  - SEO guidelines
  - Error handling

### Task Management

- **File**: `task-list.md`
- **Description**: Guidelines for creating and managing task lists
- **Key Topics**:
  - Task list creation
  - Task maintenance
  - AI instructions
  - Best practices

### Commit Messages

- **File**: `commit-messages.md`
- **Description**: Guidelines for writing clear and consistent commit messages
- **Key Topics**:
  - Message format
  - Commit types
  - Subject and body guidelines
  - Best practices
  - Examples

## How to Use

1. **For Development**:

   - Follow the project structure guidelines when creating new files
   - Adhere to component guidelines when building new components
   - Use the styling guide for consistent visual design
   - Follow content management rules for adding new content
   - Reference Astro guidelines for framework-specific features
   - Use task lists to track progress
   - Follow commit message guidelines for version control

2. **For AI Assistance**:
   - AI will use these rules to provide consistent and accurate assistance
   - Rules help maintain project standards and best practices
   - Guidelines ensure proper implementation of features
   - Task lists help track and manage project progress
   - Commit messages will follow the defined format

## Adding New Rules

1. Create a new markdown file in the `.cursor/rules` directory
2. Follow the existing format and structure
3. Update this index to include the new rule
4. Ensure the rule is properly documented and maintained

## Maintenance

- Keep rules up to date with project changes
- Review and update guidelines regularly
- Ensure consistency across all rules
- Remove outdated or irrelevant rules
- Add new rules as needed

---

## Styleguide/Test Pages

The project includes three styleguide/test pages to ensure visual consistency and comprehensive coverage of all key components, markdown features, and prose styles:

- **Main Styleguide:**
  - **Location:** `/src/pages/styleguide.astro`
  - **Purpose:** Exhaustive visual testbed for all reusable components (Astro/MDX).
  - **Usage:**
    - When adding a new reusable component, always add a demo/example to this page.
    - Use realistic content and context for each component.
    - Routable at `/styleguide` (only linked in dev).

- **Note Styleguide:**
  - **Location:** `/src/content/notes/note-styleguide.mdx`
  - **Purpose:** Representative test of all markdown, MDX, and prose features in a "note" context.
  - **Usage:**
    - If you add a component or markdown feature likely to be used in notes, add an example here.
    - Use realistic, long-form content and context.

- **Article Styleguide:**
  - **Location:** `/src/content/blog/article-styleguide.mdx`
  - **Purpose:** Representative test of all markdown, MDX, and prose features in an "article" context.
  - **Usage:**
    - If you add a component or markdown feature likely to be used in articles, add an example here.
    - Use realistic, long-form content and context.

**Exclusion from Indexes:**
All styleguide files use `styleguide: true` in their frontmatter. Content collection queries and RSS feeds are configured to exclude these files from public indexes.

**Best Practices:**
- Keep styleguides up to date with new components and features.
- Use realistic, varied content for visual QA.
- Reference styleguides before launch to ensure visual and typographic consistency.
- If adding a new markdown/MDX feature, ensure it is demonstrated in both note and article styleguides.
- The main styleguide should be exhaustive; the note and article styleguides should be representative but realistic.
